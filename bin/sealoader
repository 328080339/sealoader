#!/usr/bin/env node
'use strict';
var main=require('../main');
var pkg = require('../package.json');
var configTxt='(function(){\n'+
        '   return {\n'+
        '      //需要加载依赖的js目录/js文件 运行sealoader指令将会对此目录下的所有js文件进行依赖模块下载\n'+
        '      "jsPath":"",\n'+
        '      //线上模块仓库地址 比如模块a的地址是:http://xxx.xxx.com/libs/js/a.js 那onlinePath须为"http://xxx.xxx.com"\n'+
        '      "onlinePath":"",\n'+
        '      //后缀路径映射\n'+
        '      //如果不写则默认目录和后缀名一致 就像a.js如果在/libs/js,目录下,那么js文件就无须配置后缀路径映射\n'+
        '      //比如:要加载通用模块a.js,但sealoader只知道模块都在/libs文件夹里，但不知道a.js在libs的具体哪个文件夹里\n'+
        '      // 如果extensionToPath没有对js的文件后缀进行配置，那sealoader就会默认a.js是在/libs/js文件夹里\n'+
        '      // 如果extensionToPath中有js:"myJs",那sealoader就会去/libs/myJs中去加载a.js\n'+
        '      "extensionToPath":{\n'+
        '          // 示例:\n'+
        '          // "flash":"swf",\n'+
        '          // "imgs":["gif","png"]\n'+
        '      },\n'+
        '      //其它非js依赖配置\n'+
        '      //js模块依赖sealoader可以通过源码解析得出,但一些其他的资源文件,比如图片,css还是需要去手工配置一下的\n'+
        '      "otherDeps":{\n'+
        '          //示例:\n'+
        '          //"a":"a.png",\n'+
        '          //"b":["b.css","b.png"],\n'+
        '          //"c":["js/c.png"] 这么写则代表sealoader加载c.png会从/libs/js/中去取\n'+
        '      },\n'+
        '      //如果你们有一个插件目录页面的话 可以将页面地址写在这儿 执行"-menu"命令即会访问\n'+
        '      //默认:http://awei.oss-cn-shenzhen.aliyuncs.com/libs.html\n'+
        '      "libsMenuUrl":""\n'+
        '   }\n'+
    '})()\n';
var exec = require('child_process').exec;
var path=require("path");
var fs=require("fs");
require('colors');
var argument = process.argv;
var configPath=module.filename.substring(0,module.filename.indexOf("sealoader"))+"sealoaderConfig.js";
if(fs.existsSync(configPath)){
  configTxt=fs.readFileSync(configPath,"utf8");
}else{
  fs.writeFileSync(configPath,configTxt);
}
var config=eval(configTxt);
switch(argument[2]){
  case "-v":
    console.log(pkg.version);
    break;
  case "-h":
    exec("start https://www.npmjs.com/package/sealoader");
    break;
  case "-menu":
    var menuUrl=config.libsMenuUrl;
    if(!menuUrl||menuUrl=="")menuUrl="http://awei.oss-cn-shenzhen.aliyuncs.com/libs.html";
    exec("start "+menuUrl);
    break;
  case "-config":
    console.log("sealoaderConfig.js路径(不是我不想帮你打开,考虑到各系统的兼容,姑且输出路径吧==):");
    console.log(path.normalize(configPath));
    break;
  default:
    if(!config.onlinePath||config.onlinePath==""){
      console.log("尚未配置仓库地址onlinePath".red);
      console.log("打开配置命令:sealoader -config");
      return;
    }
    var jsPath=argument[2],
      nocache=argument.indexOf("-nocache"),
      nowPath=process.cwd();
    if(nocache==2)jsPath=argument[3];
    if(!jsPath){
      jsPath=config.jsPath;
      if(!jsPath||jsPath=="")jsPath="js";
    }
    if(!fs.existsSync(nowPath+"/"+jsPath)){
      console.log(("未发现命令行启动目录下存在"+jsPath+",请检查配置!").red);
      console.log("打开配置命令:sealoader -config");
    }else{
      main.do(nowPath+"/"+jsPath,config,nocache==-1);
    }
}
